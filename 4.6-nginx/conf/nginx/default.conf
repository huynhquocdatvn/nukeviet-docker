server {
    listen       80;
    server_name  localhost;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

server {
    listen 80;
    server_name phpmyadmin.nukeviet.local;

    location / {
        proxy_pass http://phpmyadmin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 80;
    server_name nukeviet.local;

    root /var/www/html;
    index index.php index.html;

    #Disables automatic generation of the “ETag” response header field for static resources
    etag off;
    #Disables the directory listing output
    autoindex off;

    #Maps file name extensions to MIME types of responses
    types {
        application/manifest+json webmanifest;
        application/json json;
        application/xml xml;
        application/rss+xml rss;
        font/eot eot;
        font/otf otf;
        font/ttf ttf;
        font/woff woff;
        font/woff2 woff2;
        image/bmp bmp;
        image/gif gif;
        image/jpeg jpeg jpg;
        image/png png;
        image/svg+xml svg;
        image/tiff tif tiff;
        image/vnd.microsoft.icon ico;
        image/webp webp;
        text/css css;
        text/html htm html;
        text/javascript js mjs;
        text/plain txt;
        text/xsl xsl;
    }

    #Enables gzipping of responses
    gzip on;
    gzip_comp_level 6;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_min_length 256;
    gzip_types application/json application/manifest+json application/rss+xml application/xml font/otf font/ttf image/svg+xml text/css text/javascript text/plain text/xsl;

    #Enables brotli compression of responses
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types application/json application/manifest+json application/rss+xml application/xml font/otf font/ttf image/svg+xml text/css text/javascript text/plain text/xsl;

    #Adds the specified charset to the "Content-Type" response header field
    charset UTF-8;
    charset_types application/json application/manifest+json application/rss+xml application/xml image/svg+xml text/css text/javascript text/xsl;

    #Defines the URI that will be shown for the specified errors;
    error_page 400 /error.php?code=400;
    error_page 403 /error.php?code=403;
    error_page 404 /error.php?code=404;
    error_page 405 /error.php?code=405;
    error_page 408 /error.php?code=408;
    error_page 500 /error.php?code=500;
    error_page 502 /error.php?code=502;
    error_page 503 /error.php?code=503;
    error_page 504 /error.php?code=504;

    #Define special variables to add the specified fields to the response header
    set $cors_origin "";
    set $expires_value off;
    set $cache_control_value "";
    set $is_image "";
    set $google_noarchive "";
    set $hsts "";
    if ($request_uri ~ "\.(css|js|mjs|xsl)($|\?)") {
        set $expires_value 1M;
        set $cache_control_value "public";
    }
    if ($request_uri ~ "\.(bmp|gif|ico|jpeg|jpg|png|svg|tif|tiff|webp)($|\?)") {
        set $expires_value 1y;
        set $cache_control_value "public, no-transform";
        set $is_image "1";
    }
    if ($request_uri ~ "\.(eot|otf|ttf|woff|woff2)($|\?)") {
        set $expires_value 6M;
        set $cache_control_value "public";
    }
    if ($request_uri ~ "\.(doc|pdf|swf)($|\?)") {
        set $google_noarchive "noarchive, nosnippet";
    }
    if ($scheme = "https") {
        set $hsts "max-age=2592000; includeSubDomains; preload";
    }

    expires $expires_value;
    add_header Strict-Transport-Security $hsts;
    add_header Cache-Control $cache_control_value;
    add_header Access-Control-Allow-Origin $cors_origin;
    add_header Referrer-Policy "no-referrer-when-downgrade, strict-origin-when-cross-origin" always;
    add_header X-Robots-Tag $google_noarchive;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;

    #Only allow access to api.php via POST method
    location /api.php {
        if ($request_method !~ "^POST") {
            return 404;
        }
        try_files /does_not_exists @php;
    }

    location / {
        #........................................

        #Block access to certain folders and files
        if ($request_uri ~ "^/(\.(.*)|composer\.json|default\.(htaccess\.txt|web\.config\.txt|php)|mainfile\.php|web\.config|config\.php).*$") {
            return 404;
        }
        if ($request_uri ~ "^/(data/ip6?|includes|install/tpl|vendor|assets/tpl|data/cache|data/certs|data/logs)/.*$") {
            return 404;
        }
        if ($request_uri ~ "^/(install/(css|images)|modules|themes|assets|data/config|data/tmp|uploads)/.*\.((j|a)spx?|(p|s)html|cgi|inc|ini|php|pl|py|sh|sql\.gz|tpl|xml).*$") {
            return 404;
        }

        #Creating Rewrite Rules
        rewrite ^/robots\.txt$ /robots.php last;
        rewrite ^/sitemap\.xml$ /index.php?nv=SitemapIndex last;
        rewrite ^/sitemap\-([a-z]+)\.xml$ /index.php?language=$1&nv=SitemapIndex last;
        rewrite ^/sitemap\-([a-z]+)\.([a-zA-Z0-9\-]+)\.xml$ /index.php?language=$1&nv=$2&op=sitemap last;
        rewrite ^/sitemap\-([a-z]+)\.([a-zA-Z0-9\-]+)\.([a-zA-Z0-9\-]+)\.xml$ /index.php?language=$1&nv=$2&op=sitemap/$3 last;
        rewrite ^/api\/(en|vi)\/([a-zA-Z0-9]+)\/([a-zA-Z0-9]+)\/?$ api.php?language=$1&module=$2&action=$3 last;
        rewrite ^/api\/(en|vi)\/([a-zA-Z0-9]+)\/?$ api.php?language=$1&action=$2 last;
        rewrite ^/api\/([a-zA-Z0-9]+)\/([a-zA-Z0-9]+)\/?$ api.php?module=$1&action=$2 last;
        rewrite ^/api\/([a-zA-Z0-9]+)\/?$ api.php?action=$1 last;
        if (!-e $request_filename) {
            rewrite ^/admin/(.*)$ /admin/index.php last;
            rewrite ^/(.*)(/|\.html)$ /index.php;
        }
        rewrite ^/(.*)tag\/([^?]+)$ /index.php;
        rewrite ^/([a-zA-Z0-9\-\/]+)\/([a-zA-Z0-9\-]+)$ /$1/$2/ redirect;
        rewrite ^/([a-zA-Z0-9\-]+)$ /$1/ redirect;

        #Redirecting php files to location @php
        location ~ [^/]\.php$ {
            try_files /does_not_exists @php;
        }

    }

    #Location @php - where to specifically handle php files
    location @php {
        #........................................

        fastcgi_hide_header X-Powered-By;# If you use NGINX with FastCGI
        # proxy_hide_header X-Powered-By;# If you use Nginx Reverse Proxy
        add_header Strict-Transport-Security $hsts;

        fastcgi_pass nukeviet:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
        include fastcgi_params;
    }
}
